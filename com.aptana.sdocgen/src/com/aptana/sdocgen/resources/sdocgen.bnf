###
#
# This file Copyright (c) 2005-2009 Aptana, Inc. This program is
# dual-licensed under both the Aptana Public License and the GNU General
# Public license. You may elect to use one or the other of these licenses.
#
# This program is distributed in the hope that it will be useful, but
# AS-IS and WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE, TITLE, or
# NONINFRINGEMENT. Redistribution, except as permitted by whichever of
# the GPL or APL you select, is prohibited.
#
# 1. For the GPL license (GPL), you can redistribute and/or modify this
# program under the terms of the GNU General Public License,
# Version 3, as published by the Free Software Foundation.  You should
# have received a copy of the GNU General Public License, Version 3 along
# with this program; if not, write to the Free Software Foundation, Inc., 51
# Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
#
# Aptana provides a special exception to allow redistribution of this file
# with certain Eclipse Public Licensed code and certain additional terms
# pursuant to Section 7 of the GPL. You may view the exception and these
# terms on the web at http://www.aptana.com/legal/gpl/.
#
# 2. For the Aptana Public License (APL), this program and the
# accompanying materials are made available under the terms of the APL
# v1.0 which accompanies this distribution, and is available at
# http://www.aptana.com/legal/apl/.
#
# You may view the GPL, Aptana's exception and additional terms, and the
# APL in the file titled license.html at the root of the corresponding
# plugin containing this source file.
#
# Any modifications to this file must keep this entire header intact.
#
###

Grammar
	:	Blocks
	;
	
Blocks
	:	Blocks Block {AddBlock}
	|	Block {FirstBlock}
	;
	
Block
	:	START_DOCUMENTATION Text END_DOCUMENTATION {TextBlock}
	|	START_DOCUMENTATION Tags END_DOCUMENTATION {TagsBlock}
	|	START_DOCUMENTATION Text Tags END_DOCUMENTATION {Block}
	|	LOCATION {Location}
	|	NEXT_LINE {NextLine}
	;

Text
	:	Text TextPart {AddText}
	|	TextPart {PassThrough}
	;
	
TextPart
	:	TEXT {Text}
	|	LBRACKET {Text}
	|	RBRACKET {Text}
	|	LCURLY {Text}
	|	RCURLY {Text}
	|	POUND {Text}
	|	IDENTIFIER {Text}
	|	COLON {Text}
	|	ERROR {Text}
	;
	
Tags
	:	Tags Tag {AddTag}
	|	Tag {FirstTag}
	;

Tag
	:	ADVANCED {Advanced}
	|	ADVANCED Text {Advanced}
	|	ALIAS Text {Alias}
	|	AUTHOR Text {Author}
	|	CLASS_DESCRIPTION LCURLY Namespace RCURLY Text {ClassDescription}
	|	CONSTRUCTOR {Constructor}
	|	CONSTRUCTOR Text {Constructor}
	|	EXAMPLE Text {Example}
	|	EXCEPTION LCURLY Types RCURLY {Exception}
	|	EXCEPTION LCURLY Types RCURLY Text {ExceptionText}
	|	EXTENDS LCURLY Types RCURLY {Extends}
	|	EXTENDS LCURLY Types RCURLY Text {Extends}
	|	INTERNAL {Internal}
	|	INTERNAL Text {Internal}
	|	METHOD {Method}
	|	METHOD Text {Method}
	|	NAMESPACE LCURLY Namespace RCURLY {Namespace}
	|	NAMESPACE LCURLY Namespace RCURLY Text {NamespaceText}
	|	OVERVIEW Text {Overview}
	|	PARAM LCURLY Types RCURLY ParamName {Param}
	|	PARAM LCURLY Types RCURLY ParamName Text {ParamText}
	|	PRIVATE {Private}
	|	PRIVATE Text {Private}
	|	PROPERTY LCURLY Types RCURLY {Property}
	|	PROPERTY LCURLY Types RCURLY Text {Property}
	|	RETURN LCURLY Types RCURLY {Return}
	|	RETURN LCURLY Types RCURLY Text {ReturnText}
	|	SEE Text {SeeText}
	|	UNKNOWN {Unknown}
	|	UNKNOWN Text {UnknownText}
	;

Types
	:	Types TypeDelimiter Type {AddType}
	|	Type {FirstType}
	;

TypeDelimiter
	:	COMMA
	|	PIPE
	;
	
Type
	:	IDENTIFIER {Type}
	|	IDENTIFIER LBRACKET RBRACKET {SimpleArrayType}
	|	ARRAY LBRACKET RBRACKET {SimpleArrayType}
	|	FUNCTION LBRACKET RBRACKET {SimpleArrayType}
	|	ARRAY {Type}
	|	ARRAY LESS_THAN Type GREATER_THAN {ComplexArrayType}
	|	FUNCTION {SimpleProcedure}
	|	FUNCTION ReturnDelimiter Type {SimpleFunction}
	|	FUNCTION ReturnDelimiter LPAREN Types RPAREN {SimpleFunctionComplexReturn}
	|	FUNCTION LPAREN RPAREN {SimpleProcedure}
	|	FUNCTION LPAREN RPAREN ReturnDelimiter Type {SimpleFunction2}
	|	FUNCTION LPAREN RPAREN ReturnDelimiter LPAREN Types RPAREN {SimpleFunctionComplexReturn2}
	|	FUNCTION LPAREN Types RPAREN {Procedure}
	|	FUNCTION LPAREN Types RPAREN ReturnDelimiter Type {Function}
	|	FUNCTION LPAREN Types RPAREN ReturnDelimiter LPAREN Types RPAREN {FunctionComplexReturn}
#	|	FUNCTION FunctionParameterTypes FunctionReturnTypes {TestFunction}
	;

#FunctionParameterTypes
#	:	<empty> {NoParameterTypes}
#	|	LPAREN RPAREN {NoParameterTypes}
#	|	LPAREN Types RPAREN {ParameterTypes}
#	;
#
#FunctionReturnTypes
#	:	<empty> {NoReturnType}
#	|	ReturnDelimiter Type {ReturnType}
#	|	ReturnDelimiter LPAREN Types RPAREN {ReturnTypes}
#	;
	
ReturnDelimiter
	:	COLON {PassThrough}
	|	ARROW {PassThrough}
	;
	
ParamName
	:	TEXT {ParamName}
	|	LBRACKET TEXT RBRACKET {OptionalParamName}
	|	ELLIPSIS {VarArgs}
	|	LBRACKET ELLIPSIS RBRACKET {OptionalVarArgs}
	;

Namespace
	:	IDENTIFIER {PassThrough}
	|	FUNCTION {PassThrough}
	|	ARRAY {PassThrough}
	;
	
##
# Below is a list of tags defined by the sdoc parser that are not supported yet in this parser
##

#Param
#	|	CLASS_DESCRIPTION
#	|	COPYRIGHT
#	|	DEPRECATED
#	|	EXTENDS
#	|	ID
#	|	IGNORE
#	|	LICENSE
#	|	LINK
#	|	MEMBER_OF
#	|	NATIVE
#	|	PROJECT_DESCRIPTION
#	|	PROTECTED
#	|	SDOC
#	|	SINCE
#	|	TYPE
#	|	VERSION
#	;
